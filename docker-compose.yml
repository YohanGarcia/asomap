

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: asomap_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-asomap_user}
      POSTGRES_PASSWORD: ${DB_PASS:-asomap_password}
      POSTGRES_DB: ${DB_NAME:-asomap}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-asomap_user} -d ${DB_NAME:-asomap}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Django
  backend:
    build: ./asomap-backend-jazzmin
    container_name: asomap_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-this-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost,http://127.0.0.1}
      - USE_DOCKER_DB=${USE_DOCKER_DB:-True}
      - DB_NAME=${DB_NAME:-asomap}
      - DB_USER=${DB_USER:-asomap_user}
      - DB_PASS=${DB_PASS:-asomap_password}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - MEDIA_ROOT=/app/media
      - STATIC_ROOT=/app/staticfiles
    volumes:
      - media_data:/app/media
      - static_data:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React (para desarrollo)
  frontend-dev:
    build: ./asomap-ui-main
    container_name: asomap_frontend_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
    volumes:
      - ./asomap-ui-main:/app
      - /app/node_modules
      - /app/.yarn
    depends_on:
      - backend
    profiles:
      - dev

  # Nginx (servidor principal)
  nginx:
    build: 
      context: ./asomap/nginx
      dockerfile: Dockerfile
    container_name: asomap_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./asomap-ui-main/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend-dev
    profiles:
      - dev

  # Nginx para producci√≥n (sin frontend-dev)
  nginx-prod:
    build: 
      context: ./asomap/nginx
      dockerfile: Dockerfile
    container_name: asomap_nginx_prod
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./asomap-ui-main/build:/usr/share/nginx/html
    depends_on:
      - backend
    profiles:
      - prod

volumes:
  postgres_data:
  media_data:
  static_data:
