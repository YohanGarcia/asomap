from django.core.management.base import BaseCommand
from core.models import EmailConfiguration
from core.email_utils import get_active_email_config


class Command(BaseCommand):
    help = 'Diagnostica problemas de configuraci√≥n de email'

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üîç Diagn√≥stico de configuraci√≥n de email...')
        )
        
        # Verificar configuraci√≥n activa
        config = get_active_email_config()
        
        if not config:
            self.stdout.write(
                self.style.ERROR('‚ùå No hay configuraci√≥n de email activa')
            )
            return
        
        self.stdout.write(f'\nüìã Configuraci√≥n encontrada:')
        self.stdout.write(f'   Nombre: {config.name}')
        self.stdout.write(f'   Proveedor: {config.provider}')
        self.stdout.write(f'   Servidor: {config.host}')
        self.stdout.write(f'   Puerto: {config.port}')
        self.stdout.write(f'   TLS: {"‚úÖ" if config.use_tls else "‚ùå"}')
        self.stdout.write(f'   Usuario: {config.username}')
        self.stdout.write(f'   Email remitente: {config.from_email}')
        self.stdout.write(f'   Activo: {"‚úÖ" if config.is_active else "‚ùå"}')
        self.stdout.write(f'   Por defecto: {"‚úÖ" if config.is_default else "‚ùå"}')
        
        # Verificar configuraci√≥n completa
        if config.is_configured:
            self.stdout.write(
                self.style.SUCCESS('\n‚úÖ Configuraci√≥n completa')
            )
        else:
            self.stdout.write(
                self.style.ERROR('\n‚ùå Configuraci√≥n incompleta')
            )
            missing_fields = []
            if not config.host:
                missing_fields.append('Servidor SMTP')
            if not config.port:
                missing_fields.append('Puerto')
            if not config.username:
                missing_fields.append('Usuario')
            if not config.password:
                missing_fields.append('Contrase√±a')
            if not config.from_email:
                missing_fields.append('Email remitente')
            
            self.stdout.write(f'   Campos faltantes: {", ".join(missing_fields)}')
        
        # Verificaciones espec√≠ficas por proveedor
        if config.provider == 'gmail':
            self.stdout.write(f'\nüìß Verificaciones espec√≠ficas para Gmail:')
            
            # Verificar formato de contrase√±a
            if config.password and len(config.password.replace(' ', '')) == 16:
                self.stdout.write('   ‚úÖ Contrase√±a parece ser de aplicaci√≥n (16 caracteres)')
            else:
                self.stdout.write(
                    self.style.WARNING('   ‚ö†Ô∏è Contrase√±a no parece ser de aplicaci√≥n')
                )
                self.stdout.write('   üí° Para Gmail necesitas:')
                self.stdout.write('      1. Verificaci√≥n en dos pasos ACTIVADA')
                self.stdout.write('      2. Contrase√±a de aplicaci√≥n de 16 caracteres')
                self.stdout.write('      3. NO usar contrase√±a normal')
            
            # Verificar servidor y puerto
            if config.host == 'smtp.gmail.com':
                self.stdout.write('   ‚úÖ Servidor SMTP correcto')
            else:
                self.stdout.write(
                    self.style.ERROR('   ‚ùå Servidor SMTP incorrecto')
                )
            
            if config.port == 587:
                self.stdout.write('   ‚úÖ Puerto correcto')
            else:
                self.stdout.write(
                    self.style.ERROR('   ‚ùå Puerto incorrecto (debe ser 587)')
                )
            
            if config.use_tls:
                self.stdout.write('   ‚úÖ TLS habilitado')
            else:
                self.stdout.write(
                    self.style.ERROR('   ‚ùå TLS debe estar habilitado')
                )
        
        elif config.provider == 'outlook':
            self.stdout.write(f'\nüìß Verificaciones espec√≠ficas para Outlook:')
            
            if config.host == 'smtp.office365.com':
                self.stdout.write('   ‚úÖ Servidor SMTP correcto')
            else:
                self.stdout.write(
                    self.style.ERROR('   ‚ùå Servidor SMTP incorrecto')
                )
        
        # Recomendaciones
        self.stdout.write(f'\nüí° Recomendaciones:')
        self.stdout.write('   1. Verifica que la contrase√±a sea correcta')
        self.stdout.write('   2. Para Gmail: usa contrase√±a de aplicaci√≥n')
        self.stdout.write('   3. Verifica que el email remitente sea v√°lido')
        self.stdout.write('   4. Aseg√∫rate de que TLS est√© habilitado')
        self.stdout.write('   5. Verifica tu conexi√≥n a internet')
        
        self.stdout.write(f'\nüß™ Para probar la configuraci√≥n:')
        self.stdout.write('   python manage.py test_email_config')
