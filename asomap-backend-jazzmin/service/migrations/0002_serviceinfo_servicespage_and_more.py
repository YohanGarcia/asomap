# Generated by Django 4.2.7 on 2025-08-24 01:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('service', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Nombre del servicio', max_length=200, verbose_name='Título del Servicio')),
                ('description', models.TextField(help_text='Descripción detallada del servicio', verbose_name='Descripción')),
                ('steps', models.JSONField(default=list, help_text='Lista de pasos para usar el servicio', verbose_name='Pasos')),
                ('image', models.ImageField(blank=True, help_text='Imagen representativa del servicio', null=True, upload_to='services/', verbose_name='Imagen')),
                ('image_alt', models.CharField(blank=True, help_text='Texto alternativo para la imagen', max_length=200, null=True, verbose_name='Texto Alternativo de la Imagen')),
                ('pdf_file', models.FileField(blank=True, help_text='Archivo PDF relacionado con el servicio', null=True, upload_to='services/pdfs/', verbose_name='Archivo PDF')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de aparición del servicio', verbose_name='Orden')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el servicio está activo', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Información de Servicio',
                'verbose_name_plural': 'Información de Servicios',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título principal de la página de servicios', max_length=200, verbose_name='Título')),
                ('subtitle', models.CharField(help_text='Subtítulo descriptivo de la página', max_length=300, verbose_name='Subtítulo')),
                ('banner_bg', models.CharField(default='#FBE3D2', help_text='Color hexadecimal del banner (ej: #FBE3D2)', max_length=7, verbose_name='Color de Fondo del Banner')),
                ('search_placeholder', models.CharField(default='Buscar servicios...', help_text='Texto que aparece en el campo de búsqueda', max_length=100, verbose_name='Texto del Placeholder de Búsqueda')),
                ('no_results_text', models.CharField(default='No se encontraron servicios', help_text='Texto que aparece cuando no hay resultados', max_length=100, verbose_name='Texto de No Resultados')),
                ('internet_banking_url', models.URLField(help_text='URL para acceder a la banca en línea', verbose_name='URL de Banca en Línea')),
                ('internet_banking_button', models.CharField(default='Acceder a Banca en Línea', help_text='Texto del botón para acceder a banca en línea', max_length=100, verbose_name='Texto del Botón de Banca en Línea')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la página está activa', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Página de Servicios',
                'verbose_name_plural': 'Páginas de Servicios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='servicecategory',
            unique_together=None,
        ),
        migrations.AlterUniqueTogether(
            name='servicerate',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='servicerate',
            name='category',
        ),
        migrations.DeleteModel(
            name='ServiceRatesPage',
        ),
        migrations.DeleteModel(
            name='ServiceCategory',
        ),
        migrations.DeleteModel(
            name='ServiceRate',
        ),
        migrations.AddField(
            model_name='serviceinfo',
            name='services_page',
            field=models.ForeignKey(help_text='Página a la que pertenece este servicio', on_delete=django.db.models.deletion.CASCADE, related_name='item_details', to='service.servicespage', verbose_name='Página de Servicios'),
        ),
    ]
