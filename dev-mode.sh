#!/bin/bash

echo "üîß Iniciando ASOMAP en modo desarrollo..."

# Verificar si Docker est√° ejecut√°ndose
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker no est√° ejecut√°ndose. Por favor, inicia Docker primero."
    exit 1
fi

# Verificar si Docker Compose est√° disponible
if ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose no est√° disponible. Por favor, verifica la instalaci√≥n."
    exit 1
fi

# Verificar si existe el archivo .env
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  Archivo .env no encontrado. Copiando desde env.example..."
    cp env.example .env
    echo "‚úÖ Archivo .env creado. Revisa y modifica las variables seg√∫n necesites."
fi

# Detener servicios de producci√≥n si est√°n ejecut√°ndose
echo "üõë Deteniendo servicios de producci√≥n..."
docker compose --profile prod down

# Construir las im√°genes para desarrollo
echo "üì¶ Construyendo im√°genes para desarrollo..."
docker compose build

if [ $? -ne 0 ]; then
    echo "‚ùå Error al construir las im√°genes. Revisa los logs."
    exit 1
fi

# Ejecutar servicios de desarrollo
echo "üöÄ Iniciar servicios de desarrollo..."
docker compose --profile dev up -d

if [ $? -ne 0 ]; then
    echo "‚ùå Error al iniciar los servicios. Revisa los logs."
    exit 1
fi

echo "‚úÖ Servicios de desarrollo iniciados exitosamente!"
echo ""
echo "üåê URLs disponibles:"
echo "   ‚Ä¢ Frontend (Vite con Hot Reload): http://localhost:3000"
echo "   ‚Ä¢ Backend (Django): http://localhost:8000"
echo "   ‚Ä¢ Aplicaci√≥n principal (Nginx): http://localhost:8080"
echo "   ‚Ä¢ Admin de Django: http://localhost:8080/admin"
echo "   ‚Ä¢ API Swagger: http://localhost:8000/api/schema/swagger-ui/"
echo ""
echo "üìã Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs: docker compose logs -f"
echo "   ‚Ä¢ Ver logs espec√≠ficos: docker compose logs -f backend"
echo "   ‚Ä¢ Detener servicios: docker compose down"
echo "   ‚Ä¢ Reiniciar: docker compose restart"
echo "   ‚Ä¢ Ver estado: docker compose ps"
echo ""
echo "üîÑ Hot reload activado:"
echo "   ‚Ä¢ Frontend: Cambios autom√°ticos en http://localhost:3000 (Vite)"
echo "   ‚Ä¢ Backend: Requiere reiniciar contenedor"
echo "   ‚Ä¢ Nginx: Sirve el frontend desde http://localhost:8080"
echo ""

# Esperar un momento para que los servicios se inicien
echo "‚è≥ Esperando que los servicios se inicien..."
sleep 20

# Verificar el estado de los servicios
echo "üîç Verificando estado de los servicios..."
docker compose ps

echo ""
echo "üéâ ¬°Modo desarrollo activado!"
echo "üí° Para volver a producci√≥n: ./build-and-run.sh"
echo ""
echo "üìù Notas importantes:"
echo "   ‚Ä¢ El frontend se ejecuta en http://localhost:3000 con hot reload (Vite)"
echo "   ‚Ä¢ Nginx sirve como proxy y sirve el frontend en http://localhost:8080"
echo "   ‚Ä¢ Los cambios en el backend requieren reiniciar el contenedor"
echo "   ‚Ä¢ La base de datos PostgreSQL est√° disponible en puerto 5433"
echo "   ‚Ä¢ Para desarrollo real: usa http://localhost:3000 (no 8080)"
